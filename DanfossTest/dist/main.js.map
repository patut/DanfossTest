{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/house/house.component.css","webpack:///./src/app/home/house/house.component.html","webpack:///./src/app/home/house/house.component.ts","webpack:///./src/app/loader/loader.component.css","webpack:///./src/app/loader/loader.component.html","webpack:///./src/app/loader/loader.component.ts","webpack:///./src/app/loader/loader.service.ts","webpack:///./src/app/model/rest/internal/House.ts","webpack:///./src/app/rest.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n<app-loader></app-loader>\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {\r\n    MatFormFieldModule, MatInputModule, MatSelectModule,\r\n    MatNativeDateModule, MatDatepickerModule, MatExpansionModule, MatButtonModule, MatTableModule,\r\n    MatCheckboxModule, MatSnackBarModule, MatProgressSpinnerModule, MatPaginatorModule,\r\n    MatListModule, MatCardModule, MatTooltipModule, MatSortModule\r\n} from '@angular/material';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { CdkTableModule } from \"@angular/cdk/table\";\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoaderComponent } from './loader/loader.component';\r\nimport { LoaderService } from './loader/loader.service';\r\nimport { RestService } from './rest.service';\r\nimport { HomeComponent } from './home/home.component';\nimport { HouseComponent } from './home/house/house.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        LoaderComponent,\r\n        HomeComponent,\r\n        HouseComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        BrowserAnimationsModule,\r\n        MatSelectModule,\r\n        MatNativeDateModule,\r\n        MatDatepickerModule,\r\n        MatExpansionModule,\r\n        MatButtonModule,\r\n        MatTableModule,\r\n        MatCheckboxModule,\r\n        ReactiveFormsModule,\r\n        CdkTableModule,\r\n        MatSnackBarModule,\r\n        HttpClientModule,\r\n        MatProgressSpinnerModule,\r\n        MatPaginatorModule,\r\n        MatListModule,\r\n        MatCardModule,\r\n        MatSortModule,\r\n        MatTooltipModule,\r\n        RouterModule.forRoot([{\r\n            path: '', component: HomeComponent\r\n        }])\r\n    ],\r\n    providers: [\r\n        LoaderService,\r\n        RestService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"div {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 870px;\\r\\n}\\r\\n\\r\\napp-left-params-tab {\\r\\n    width: 320px;\\r\\n    min-width: 320px;\\r\\n    padding-right: 10px;\\r\\n}\\r\\n\"","module.exports = \"<h1>Houses data</h1>\\r\\n<mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"address\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Наименование</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n            {{element.address}}\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"waterValues\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Показания</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n            {{element.waterValues}}\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\">\\r\\n\\r\\n    </mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n    </mat-row>\\r\\n</mat-table>\\r\\n\\r\\n<section>\\r\\n    <div *ngIf=\\\"minValue\\\">\\r\\n        <h2>Максимальное значение</h2>\\r\\n        <app-house [house]=\\\"minValue\\\"></app-house>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"maxValue\\\">\\r\\n        <h2>Минимальное значение</h2>\\r\\n        <app-house [house]=\\\"maxValue\\\"></app-house>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { DataSource } from '@angular/cdk/table';\r\n\r\nimport { House } from '../model/rest/internal/House';\r\nimport { RestService } from '../rest.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    displayedColumns = ['address', 'waterValues'];\r\n\r\n    dataSource = new PropertyDataSource();\r\n    minValue: House;\r\n    maxValue: House;\r\n\r\n    constructor(private rest: RestService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadAllHouses();\r\n        this.loadMinHouse();\r\n        this.loadMaxHouse();\r\n    }\r\n\r\n    loadAllHouses() {\r\n        this.rest.getHouses({}).subscribe(res => {\r\n            this.dataSource.data.next(res.houseList);\r\n        });\r\n    }\r\n\r\n    loadMinHouse() {\r\n        this.rest.getHouseWithMinWC({}).subscribe(res => {\r\n            this.maxValue = res.house;\r\n        });\r\n    }\r\n\r\n    loadMaxHouse() {\r\n        this.rest.getHouseWithMaxWC({}).subscribe(res => {\r\n            this.minValue = res.house;\r\n        });\r\n    }\r\n}\r\n\r\nexport class PropertyDataSource extends DataSource<House> {\r\n    data = new Subject<House[]>();\r\n\r\n    /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n    connect(): Subject<House[]> {\r\n        return this.data;\r\n    }\r\n\r\n    disconnect() {\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n    Адрес дома {{house.address}}, показания {{house.waterValues}}.\\r\\n</p>\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { House } from '../../model/rest/internal/House';\r\n\n@Component({\n  selector: 'app-house',\n  templateUrl: './house.component.html',\n  styleUrls: ['./house.component.css']\n})\nexport class HouseComponent implements OnInit {\n\n    @Input() house: House;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".backdrop{\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    left: 0;\\r\\n    background: rgba(255,255,255,0.5);\\r\\n    z-index: 2000;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n    position: absolute;\\r\\n    top: 40%;\\r\\n}\"","module.exports = \"<div class=\\\"backdrop\\\" *ngIf=\\\"showLoader()\\\">\\r\\n    <mat-spinner></mat-spinner>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, Input, ElementRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { LoaderService } from './loader.service';\r\n\r\n@Component({\r\n    selector: 'app-loader',\r\n    templateUrl: './loader.component.html',\r\n    styleUrls: ['./loader.component.css']\r\n})\r\nexport class LoaderComponent implements OnInit, OnDestroy {\r\n\r\n    showSpinner: boolean;\r\n    @Input() seperateMode: boolean;\r\n\r\n    private subscription: Subscription;\r\n    private loading = 0;\r\n    private loaded = 0;\r\n\r\n    constructor(private service: LoaderService,\r\n        private myElement: ElementRef) { }\r\n\r\n    ngOnInit() {\r\n        var self = this;\r\n\r\n        if (this.seperateMode) {\r\n            this.myElement.nativeElement.style.position = \"absolute\";\r\n        }\r\n\r\n        this.subscription = this.service.load.subscribe((load) => {\r\n            if (load) {\r\n                self.loading++;\r\n            }\r\n            else {\r\n                self.loaded++;\r\n            }\r\n\r\n            var overflowProperty = self.loading > self.loaded ? 'auto' : 'hidden';\r\n            document.body.style.overflowX = overflowProperty;\r\n            self.showSpinner = self.loading > self.loaded;\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    showLoader(): boolean {\r\n        if (this.seperateMode) {\r\n            return true;\r\n        }\r\n\r\n        return this.showSpinner;\r\n    }\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class LoaderService{\r\n    load: Subject<boolean> = new Subject();\r\n}","﻿export class House {\r\n    id: string;\r\n    address: string;\r\n    waterValues: number;\r\n}","﻿import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/map'\r\n\r\nimport { environment } from '../environments/environment';\r\nimport { LoaderService } from \"./loader/loader.service\";\r\nimport { GetHousesRequest } from \"./model/rest/request/GetHousesRequest\";\r\nimport { GetHousesResponse } from \"./model/rest/response/GetHousesResponse\";\r\nimport { GetHouseWithMaxWCRequest } from \"./model/rest/request/GetHouseWithMaxWCRequest\";\r\nimport { GetHouseWithMaxWCResponse } from \"./model/rest/response/GetHouseWithMaxWCResponse\";\r\nimport { GetHouseWithMinWCResponse } from \"./model/rest/response/GetHouseWithMinWCResponse\";\r\nimport { GetHouseWithMinWCRequest } from \"./model/rest/request/GetHouseWithMinWCRequest\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class RestService {\r\n\r\n    constructor(public http: HttpClient,\r\n        public loaderService: LoaderService,\r\n        public snackBarService: MatSnackBar) {\r\n        \r\n    }\r\n\r\n    getHouses(request: GetHousesRequest): Observable<GetHousesResponse> {\r\n        return this.runPost<GetHousesRequest, GetHousesResponse>(request, \"GetHouses\");\r\n    }\r\n\r\n    getHouseWithMaxWC(request: GetHouseWithMaxWCRequest): Observable<GetHouseWithMaxWCResponse> {\r\n        return this.runPost<GetHouseWithMaxWCRequest, GetHouseWithMaxWCResponse>(request, \"GetHouseWithMaxWC\");\r\n    }\r\n\r\n    getHouseWithMinWC(request: GetHouseWithMinWCRequest): Observable<GetHouseWithMinWCResponse> {\r\n        return this.runPost<GetHouseWithMinWCRequest, GetHouseWithMinWCResponse>(request, \"GetHouseWithMinWC\");\r\n    }\r\n\r\n    runPost<Request, Response>(request: Request, method: string): Observable<Response> {\r\n        const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\r\n\r\n        this.loaderService.load.next(true);\r\n\r\n        return this.http.post(environment.webApi + method, { request: request }, { responseType: \"json\", headers: headers, withCredentials: true })\r\n            .map((response: Response) => {\r\n                this.loaderService.load.next(false);\r\n                if (!(response as any).isSuccess) {\r\n                    this.snackBarService.open((response as any).message, \"Ок\");\r\n                    throw (response as any).message;\r\n                }\r\n\r\n                return response;\r\n            });\r\n    }\r\n}","export const environment = {\r\n    production: false,\r\n    webApi: 'http://localhost:4704/DanfossTestService.svc/'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}